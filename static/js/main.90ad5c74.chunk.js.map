{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","props","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","todosFromServer","maxId","sort","a","b","App","useState","toDo","setToDo","setUser","errorToDo","setErrorToDo","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","length","Number","todoAdd","push","addTodo","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVCC,EAA4B,SAACC,GACxC,IAAQC,EAASD,EAATC,KAER,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKN,OAA7C,SACGM,EAAKR,QCHCW,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCT,EACES,EADFT,MAAOK,EACLI,EADKJ,KAAMT,EACXa,EADWb,GAAIK,EACfQ,EADeR,UAGnB,OAEE,0BACE,UAASL,EACTU,UAAWI,IAAW,WAAY,CAAE,sBAAuBT,IAF7D,UAIE,oBAAIK,UAAU,kBAAd,SACGN,IAGFK,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QChBlBM,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASN,UAAU,WAAnB,SACGM,EAAMC,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKb,UCH5B,SAASkB,EAAQZ,GAGf,OAFkBa,EAAgBC,MAAK,SAAAX,GAAI,OAAIA,EAAKT,KAAOM,MAEvC,KAGtB,IAAMU,EAAgBK,EAAgBJ,KAAI,SAAAJ,GAAI,kCACzCA,GADyC,IAE5CJ,KAAMS,EAAQL,EAAKP,aAGjBgB,EAAQ,YAAID,GAAiBE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEzB,GAAKwB,EAAExB,MAAI,GAAGA,GAgBnD0B,EAAM,WACjB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOlB,EAAP,KAAaqB,EAAb,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAkBA,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,gCAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SAvBe,SAACC,GACpBA,EAAMC,iBAEFX,EAAKY,OAAS,GAAsB,IAAjBC,OAAOhC,KAvBlB,SAACI,EAAcP,GAG7B,IAAMoC,EAAU,CACd1C,GAHFsB,GAAS,EAIPjB,WAAW,EACXD,MAAOS,EACPP,SACAG,KAAMS,EAAQZ,IAGhBU,EAAM2B,KAAKD,GAaPE,CAAQhB,EAAMa,OAAOhC,IACrBoB,EAAQ,IACRC,EAAQ,IACRE,GAAa,GACbE,GAAa,IACY,IAAhBN,EAAKY,OACdR,GAAa,GACa,IAAjBS,OAAOhC,IAChByB,GAAa,IAQb,UAKE,sBAAKxB,UAAU,QAAf,UACE,wBAAOA,UAAU,eAAjB,UACE,mBAAGA,UAAU,cAAb,sBACA,uBACEA,UAAU,cACVmC,KAAK,OACL,UAAQ,aACRC,MAAOlB,EACPmB,SAAU,SAACT,GAAD,OAAWT,EAAQS,EAAMU,OAAOF,aAG7Cf,GAAaH,EAAKY,OAAS,GACvB,sBAAM9B,UAAU,QAAhB,qCAGP,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,sBACA,yBACEA,UAAU,cACV,UAAQ,aACRT,KAAK,OACL6C,MAAOrC,EACPsC,SAAU,SAACT,GAAD,OAAWR,EAAQQ,EAAMU,OAAOF,QAL5C,UAOE,wBAAQA,MAAM,IAAd,2BACC3B,EAAgBF,KAAI,gBAAGjB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACnB,wBAAQ6C,MAAO9C,EAAf,SAA6BC,GAALD,SAG3BiC,GAA8B,IAAjBQ,OAAOhC,IAChB,sBAAMC,UAAU,QAAhB,qCAGP,wBAAQmC,KAAK,SAAS,UAAQ,eAAenC,UAAU,SAAvD,oBAKF,cAAC,EAAD,CAAUM,MAAOA,QCtGvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.90ad5c74.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = (props) => {\n  const { user } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, user, id, completed,\n  } = todo;\n\n  return (\n\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet maxId = [...todosFromServer].sort((a, b) => b.id - a.id)[0].id;\n\nconst addTodo = (todo: string, userId: number) => {\n  maxId += 1;\n\n  const todoAdd = {\n    id: maxId,\n    completed: false,\n    title: todo,\n    userId,\n    user: getUser(userId),\n  };\n\n  todos.push(todoAdd);\n};\n\nexport const App = () => {\n  const [toDo, setToDo] = useState('');\n  const [user, setUser] = useState('');\n  const [errorToDo, setErrorToDo] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (toDo.length > 0 && Number(user) !== 0) {\n      addTodo(toDo, Number(user));\n      setToDo('');\n      setUser('');\n      setErrorToDo(false);\n      setErrorUser(false);\n    } else if (toDo.length === 0) {\n      setErrorToDo(true);\n    } else if (Number(user) === 0) {\n      setErrorUser(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add todo for users</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"field__label\">\n            <p className=\"form__title\"> Title: </p>\n            <input\n              className=\"field__form\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={toDo}\n              onChange={(event) => setToDo(event.target.value)}\n            />\n          </label>\n          {errorToDo && toDo.length < 1\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <p className=\"form__title\"> Users: </p>\n          <select\n            className=\"field__form\"\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={user}\n            onChange={(event) => setUser(event.target.value)}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>{name}</option>\n            ))}\n          </select>\n          {errorUser && Number(user) === 0\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" className=\"button\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}